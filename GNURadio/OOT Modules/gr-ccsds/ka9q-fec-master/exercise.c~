/* Exercise an RS codec a specified number of times using random
 * data and error patterns
 *
 * Copyright 2002 Phil Karn, KA9Q
 * May be used under the terms of the GNU Lesser General Public License (LGPL)
 */
#define FLAG_ERASURE 1 /* Randomly flag 50% of errors as erasures */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "fixed.h"
#include "ccsds.h"

#define PRINTPARM printf("CCSDS (255,223):");


/* Exercise the RS codec passed as an argument */
int EXERCISE(
//#if !defined(CCSDS) && !defined(FIXED)
//void *p,
//#endif
int trials){
//#if !defined(CCSDS) && !defined(FIXED)
//  struct rs *rs = (struct rs *)p;
//#endif
  data_t block[NN],tblock[NN];
  int i;
  int errors;
  int errlocs[NN];
  int derrlocs[NROOTS];
  int derrors;
  int errval,errloc;
  int erasures;
  int decoder_errors = 0;



      /* Load block with random data and encode */
      for(i=0;i<NN-NROOTS;i++)
	block[i] = random() & NN;
      

      ENCODE_RS(&block[0],&block[NN-NROOTS],0);


      /* Decode the errored block */
      derrors = DECODE_RS(tblock,derrlocs,erasures,0);



  return decoder_errors;
}
